{"ast":null,"code":"import{useState}from'react';import TaskContext from'./TaskContext';import{jsx as _jsx}from\"react/jsx-runtime\";const TaskState=props=>{const[tasks,setTasks]=useState([]);async function getTasks(){const response=await fetch('http://srv485884.hstgr.cloud:5000/tasks',{method:\"GET\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\",\"token\":localStorage.getItem('token')}});const json=await response.json();setTasks(json);}async function add(taskDescription,dueDate){const response=await fetch('http://srv485884.hstgr.cloud:5000/tasks',{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\",\"token\":localStorage.getItem('token')},body:JSON.stringify({taskDescription:taskDescription,dueDate:dueDate})});const json=await response.json();return json;}async function editTask(id,taskDescription,dueDate){const response=await fetch(\"http://srv485884.hstgr.cloud:5000/tasks/\".concat(id),{method:\"PUT\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\",\"token\":localStorage.getItem('token')},body:JSON.stringify({taskDescription:taskDescription,dueDate:dueDate})});const json=await response.json();return json;}async function deleteTask(id){await fetch(\"http://srv485884.hstgr.cloud:5000/tasks/\".concat(id),{method:\"DELETE\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\",\"token\":localStorage.getItem('token')}});}return/*#__PURE__*/_jsx(TaskContext.Provider,{value:{tasks,setTasks,getTasks,add,editTask,deleteTask},children:props.children});};export default TaskState;","map":{"version":3,"names":["useState","TaskContext","jsx","_jsx","TaskState","props","tasks","setTasks","getTasks","response","fetch","method","mode","headers","localStorage","getItem","json","add","taskDescription","dueDate","body","JSON","stringify","editTask","id","concat","deleteTask","Provider","value","children"],"sources":["C:/Javascript projects/todolist-frontend/src/context/TaskState.js"],"sourcesContent":["import { useState } from 'react';\r\nimport TaskContext from './TaskContext'\r\n\r\nconst TaskState = (props) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    async function getTasks() {\r\n        const response = await fetch('http://srv485884.hstgr.cloud:5000/tasks', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = await response.json();\r\n        setTasks(json);\r\n    }\r\n\r\n    async function add(taskDescription, dueDate) {\r\n        const response = await fetch('http://srv485884.hstgr.cloud:5000/tasks', {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n        const json = await response.json();\r\n        return json\r\n    }\r\n\r\n    async function editTask(id, taskDescription, dueDate) {\r\n        const response = await fetch(`http://srv485884.hstgr.cloud:5000/tasks/${id}`, {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n        const json = await response.json();\r\n        return json\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        await fetch(`http://srv485884.hstgr.cloud:5000/tasks/${id}`, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <TaskContext.Provider value={{ tasks, setTasks, getTasks, add, editTask, deleteTask }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskState"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,WAAW,KAAM,eAAe,QAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,cAAe,CAAAQ,QAAQA,CAAA,CAAG,CACtB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACpEC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,OAAO,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CACzC,CACJ,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCT,QAAQ,CAACS,IAAI,CAAC,CAClB,CAEA,cAAe,CAAAC,GAAGA,CAACC,eAAe,CAAEC,OAAO,CAAE,CACzC,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACpEC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,OAAO,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CACzC,CAAC,CACDK,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEJ,eAAe,CAAEA,eAAe,CAAEC,OAAO,CAAEA,OAAQ,CAAC,CAC/E,CAAC,CAAC,CACF,KAAM,CAAAH,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAA,IAAI,CACf,CAEA,cAAe,CAAAO,QAAQA,CAACC,EAAE,CAAEN,eAAe,CAAEC,OAAO,CAAE,CAClD,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,4CAAAe,MAAA,CAA4CD,EAAE,EAAI,CAC1Eb,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,OAAO,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CACzC,CAAC,CACDK,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEJ,eAAe,CAAEA,eAAe,CAAEC,OAAO,CAAEA,OAAQ,CAAC,CAC/E,CAAC,CAAC,CACF,KAAM,CAAAH,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAA,IAAI,CACf,CAEA,cAAe,CAAAU,UAAUA,CAACF,EAAE,CAAE,CAC1B,KAAM,CAAAd,KAAK,4CAAAe,MAAA,CAA4CD,EAAE,EAAI,CACzDb,MAAM,CAAE,QAAQ,CAChBC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,OAAO,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CACzC,CACJ,CAAC,CAAC,CACN,CAIA,mBACIZ,IAAA,CAACF,WAAW,CAAC0B,QAAQ,EAACC,KAAK,CAAE,CAAEtB,KAAK,CAAEC,QAAQ,CAAEC,QAAQ,CAAES,GAAG,CAAEM,QAAQ,CAAEG,UAAW,CAAE,CAAAG,QAAA,CACjFxB,KAAK,CAACwB,QAAQ,CACG,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAzB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}