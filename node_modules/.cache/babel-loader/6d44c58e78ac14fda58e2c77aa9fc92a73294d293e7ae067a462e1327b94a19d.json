{"ast":null,"code":"import{useContext,useEffect,useRef,useState}from'react';import React from'react';import Task from'./Task';import taskContext from'../context/TaskContext';import Alert from'./Alert';// TaskState should have api calls to manipulate data in database\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\n// change components to addTaskForm, taskTable, updateModal and task \n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/ // updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\n// on opening modal task should be set and on submitting the form tasks should be set\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Tasks(){const context=useContext(taskContext);const modal=useRef();const{tasks,getTasks,editTask,setTasks}=context;const[modalTaskId,setModalTaskId]=useState('');const[modalTaskDescription,setModalTaskDescription]=useState('');const[modalTaskDueDate,setModalTaskDueDate]=useState('');const close=useRef();const updateModalTask=task=>{setModalTaskId(task.taskId);setModalTaskDescription(task.taskDescription);setModalTaskDueDate(new Date(task.dueDate).toLocaleDateString());};async function handleClick(e){e.preventDefault();const response=await editTask(modalTaskId,modalTaskDescription,modalTaskDueDate);if(!(response.success===undefined||response.success===null)){let newTasks=JSON.parse(JSON.stringify(tasks));for(let index=0;index<newTasks.length;index++){const element=newTasks[index];if(element.TASK_ID===modalTaskId){newTasks[index].TASK_DESCRIPTION=modalTaskDescription;newTasks[index].DUE_DATE=modalTaskDueDate;console.log(newTasks[index]);break;}}setTasks(newTasks);close.current.click();window.location.reload();}else if(!(response.failure===undefined||response.failure===null)){document.querySelectorAll('#error-msg')[1].innerHTML=response.failure;document.querySelectorAll('#alert')[1].style.display='block';setTimeout(()=>{document.querySelectorAll('#error-msg')[1].innerHTML=\"\";document.querySelectorAll('#alert')[1].style.display='none';},3000);}}function onChange(e){if(e.target.name==='dueDate'){setModalTaskDueDate(new Date(e.target.value).toLocaleDateString());}else{setModalTaskDescription(e.target.value);}}useEffect(()=>{getTasks();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",ref:modal,className:\"btn btn-primary d-none\",\"data-bs-toggle\":\"modal\",\"data-bs-target\":\"#exampleModal\",children:\"Launch demo modal\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal fade\",id:\"exampleModal\",tabIndex:\"-1\",\"aria-labelledby\":\"exampleModalLabel\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"modal-title fs-5\",id:\"exampleModalLabel\",children:\"Edit task\"})}),/*#__PURE__*/_jsx(Alert,{}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"taskDescription\",className:\"form-label\",children:\"Task Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",name:\"taskDescription\",id:\"taskDescription\",value:modalTaskDescription,onChange:onChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dueDate\",className:\"form-label\",children:\"Due Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",name:\"dueDate\",id:\"dueDate\",min:new Date().toLocaleDateString(),value:modalTaskDueDate,onChange:onChange,required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{ref:close,type:\"button\",className:\"btn btn-secondary\",\"data-bs-dismiss\":\"modal\",children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleClick,children:\"Edit Task\"})]})]})]})})}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Task Description\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Due Date\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",colSpan:2,children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tasks.map(task=>{return/*#__PURE__*/_jsx(Task,{task:{taskId:task.TASK_ID,taskDescription:task.TASK_DESCRIPTION,dueDate:task.DUE_DATE},modal:modal,updateModalTask:updateModalTask},task.TASK_ID);})})]})]});}","map":{"version":3,"names":["useContext","useEffect","useRef","useState","React","Task","taskContext","Alert","jsx","_jsx","jsxs","_jsxs","Tasks","context","modal","tasks","getTasks","editTask","setTasks","modalTaskId","setModalTaskId","modalTaskDescription","setModalTaskDescription","modalTaskDueDate","setModalTaskDueDate","close","updateModalTask","task","taskId","taskDescription","Date","dueDate","toLocaleDateString","handleClick","e","preventDefault","response","success","undefined","newTasks","JSON","parse","stringify","index","length","element","TASK_ID","TASK_DESCRIPTION","DUE_DATE","console","log","current","click","window","location","reload","failure","document","querySelectorAll","innerHTML","style","display","setTimeout","onChange","target","name","value","children","type","ref","className","id","tabIndex","htmlFor","required","min","onClick","scope","colSpan","map"],"sources":["C:/Javascript projects/todolist-frontend/src/components/Tasks.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react';\r\nimport React from 'react'\r\nimport Task from './Task';\r\nimport taskContext from '../context/TaskContext';\r\nimport Alert from './Alert';\r\n// TaskState should have api calls to manipulate data in database\r\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\r\n// change components to addTaskForm, taskTable, updateModal and task \r\n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/\r\n// updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\r\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\r\n// on opening modal task should be set and on submitting the form tasks should be set\r\nexport default function Tasks() {\r\n    const context = useContext(taskContext)\r\n    const modal = useRef()\r\n    const { tasks, getTasks, editTask, setTasks } = context\r\n    const [modalTaskId, setModalTaskId] = useState('');\r\n    const [modalTaskDescription, setModalTaskDescription] = useState('');\r\n    const [modalTaskDueDate, setModalTaskDueDate] = useState('');\r\n    const close = useRef();\r\n\r\n    const updateModalTask = (task) => {\r\n        setModalTaskId(task.taskId)\r\n        setModalTaskDescription(task.taskDescription)\r\n        setModalTaskDueDate(new Date(task.dueDate).toLocaleDateString())\r\n    }\r\n\r\n    async function handleClick(e) {\r\n        e.preventDefault()\r\n        const response = await editTask(modalTaskId, modalTaskDescription, modalTaskDueDate);\r\n        if (!(response.success === undefined || response.success === null)) {\r\n            let newTasks = JSON.parse(JSON.stringify(tasks));\r\n            for (let index = 0; index < newTasks.length; index++) {\r\n                const element = newTasks[index];\r\n                if (element.TASK_ID === modalTaskId) {\r\n                    newTasks[index].TASK_DESCRIPTION = modalTaskDescription;\r\n                    newTasks[index].DUE_DATE = modalTaskDueDate;\r\n                    console.log(newTasks[index])\r\n                    break;\r\n                }\r\n            }\r\n            setTasks(newTasks);\r\n            close.current.click()\r\n            window.location.reload()\r\n        }\r\n        else if (!(response.failure === undefined || response.failure === null)) {\r\n            document.querySelectorAll('#error-msg')[1].innerHTML = response.failure\r\n            document.querySelectorAll('#alert')[1].style.display = 'block';\r\n            setTimeout(() => {\r\n                document.querySelectorAll('#error-msg')[1].innerHTML = \"\";\r\n                document.querySelectorAll('#alert')[1].style.display = 'none';\r\n            }, 3000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function onChange(e) {\r\n        if (e.target.name === 'dueDate') {\r\n            setModalTaskDueDate(new Date(e.target.value).toLocaleDateString())\r\n        } else {\r\n            setModalTaskDescription(e.target.value)\r\n        }\r\n    }\r\n\r\n    useEffect\r\n        (() => { getTasks() }, []);\r\n    return (\r\n        <div>\r\n            <button type=\"button\" ref={modal} className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                Launch demo modal\r\n            </button>\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Edit task</h1>\r\n                        </div>\r\n                        <Alert />\r\n                        <form>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"taskDescription\" className=\"form-label\">Task Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" name='taskDescription' id=\"taskDescription\" value={modalTaskDescription} onChange={onChange} required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"dueDate\" className=\"form-label\">Due Date</label>\r\n                                    <input type=\"date\" className=\"form-control\" name='dueDate' id=\"dueDate\" min={new Date().toLocaleDateString()} value={modalTaskDueDate} onChange={onChange} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button ref={close} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" >Close</button>\r\n                                <button className=\"btn btn-primary\" onClick={handleClick} >Edit Task</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Task Description</th>\r\n                        <th scope=\"col\">Due Date</th>\r\n                        <th scope=\"col\" colSpan={2}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map((task) => { return (<Task key={task.TASK_ID} task={{ taskId: task.TASK_ID, taskDescription: task.TASK_DESCRIPTION, dueDate: task.DUE_DATE }} modal={modal} updateModalTask={updateModalTask} />) })}\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}