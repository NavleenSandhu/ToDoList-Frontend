{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\components\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport taskContext from '../context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask() {\n  _s();\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const context = useContext(taskContext);\n  const {\n    add\n  } = context;\n  function handleClick() {\n    add(taskDescription, dueDate);\n    setTaskDescription();\n  }\n  function onChange(e) {\n    if (e.target.name === 'dueDate') {\n      const date = new Date(e.target.value);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n      const day = String(date.getDate()).padStart(2, '0');\n      const formattedDate = `${year}-${month}-${day}`;\n      setDueDate(formattedDate);\n    } else {\n      setTaskDescription(e.target.value);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskDescription\",\n        className: \"form-label\",\n        children: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"taskDescription\",\n        id: \"taskDescription\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDate\",\n        className: \"form-label\",\n        children: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        name: \"dueDate\",\n        id: \"dueDate\",\n        min: new Date(),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Add Task\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTask, \"vPz8UHABd8cCAnqXBao240g9yUo=\");\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useContext","useState","taskContext","jsxDEV","_jsxDEV","AddTask","_s","taskDescription","setTaskDescription","dueDate","setDueDate","context","add","handleClick","onChange","e","target","name","date","Date","value","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","onClick","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/components/AddTask.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport taskContext from '../context/TaskContext';\r\n\r\nexport default function AddTask() {\r\n    const [taskDescription, setTaskDescription] = useState(\"\")\r\n    const [dueDate, setDueDate] = useState(\"\")\r\n    const context = useContext(taskContext);\r\n    const { add } = context;\r\n\r\n    function handleClick(){\r\n        add(taskDescription, dueDate)\r\n        setTaskDescription();\r\n    }\r\n\r\n    function onChange(e) {\r\n        if (e.target.name === 'dueDate') {\r\n            const date = new Date(e.target.value)\r\n            const year = date.getFullYear();\r\n            const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n            const day = String(date.getDate()).padStart(2, '0');\r\n\r\n            const formattedDate = `${year}-${month}-${day}`;\r\n            setDueDate(formattedDate)\r\n        } else {\r\n            setTaskDescription(e.target.value)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container w-50\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"taskDescription\" className=\"form-label\">Task Description</label>\r\n                <input type=\"text\" className=\"form-control\" name='taskDescription' id=\"taskDescription\" onChange={onChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"dueDate\" className=\"form-label\">Due Date</label>\r\n                <input type=\"date\" className=\"form-control\" name='dueDate' id=\"dueDate\" min={new Date()} onChange={onChange} />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Task\" onClick={handleClick} />\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}