{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useState([{\n    taskDescription: \"\",\n    dueDate: \"\"\n  }]);\n  const response = fetch('http://localhost:5000/tasks', {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\n    }\n  }).then(response => setTasks(response.json()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            taskId: task.TASK_ID,\n            taskDescription: task.TASK_DESCRIPTION,\n            dueDate: task.DUE_DATE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 49\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"eHJd2RBheVUVL2AtyCSo2OBgRkQ=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","React","Task","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","taskDescription","dueDate","response","fetch","method","headers","then","json","children","class","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","task","taskId","TASK_ID","TASK_DESCRIPTION","DUE_DATE","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/components/Tasks.js"],"sourcesContent":["import { useState } from 'react';\r\nimport React from 'react'\r\nimport Task from './Task';\r\n\r\nexport default function Tasks() {\r\n    const { tasks, setTasks } = useState([{taskDescription:\"\",dueDate:\"\"}]);\r\n    const response = fetch('http://localhost:5000/tasks', {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\r\n        }\r\n    }).then(\r\n        response => setTasks(response.json())\r\n    )\r\n    return (\r\n        <div>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Task Description</th>\r\n                        <th scope=\"col\">Due Date</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map((task)=>{ return <Task taskId={task.TASK_ID} taskDescription={task.TASK_DESCRIPTION} dueDate={task.DUE_DATE}/>})}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;IAACS,eAAe,EAAC,EAAE;IAACC,OAAO,EAAC;EAAE,CAAC,CAAC,CAAC;EACvE,MAAMC,QAAQ,GAAGC,KAAK,CAAC,6BAA6B,EAAE;IAClDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,OAAO,EAAE;IACb;EACJ,CAAC,CAAC,CAACC,IAAI,CACHJ,QAAQ,IAAIH,QAAQ,CAACG,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxC,CAAC;EACD,oBACIZ,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAOc,KAAK,EAAC,OAAO;MAAAD,QAAA,gBAChBb,OAAA;QAAAa,QAAA,eACIb,OAAA;UAAAa,QAAA,gBACIb,OAAA;YAAIe,KAAK,EAAC,KAAK;YAAAF,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCnB,OAAA;YAAIe,KAAK,EAAC,KAAK;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BnB,OAAA;YAAIe,KAAK,EAAC,KAAK;YAAAF,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRnB,OAAA;QAAAa,QAAA,EACKV,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAG;UAAE,oBAAOrB,OAAA,CAACF,IAAI;YAACwB,MAAM,EAAED,IAAI,CAACE,OAAQ;YAAClB,eAAe,EAAEgB,IAAI,CAACG,gBAAiB;YAAClB,OAAO,EAAEe,IAAI,CAACI;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACjB,EAAA,CA3BuBD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}