{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport React from 'react';\nimport Task from './Task';\nimport taskContext from '../context/TaskContext';\n// TaskState should have api calls to manipulate data in database\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\n// change components to addTaskForm, taskTable, updateModal and task \n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/\n// updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\n// on opening modal task should be set and on submitting the form tasks should be set\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const context = useContext(taskContext);\n  const modal = useRef();\n  const {\n    tasks,\n    getTasks\n  } = context;\n  useEffect(() => {\n    getTasks();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            colSpan: 2,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            task: {\n              taskId: task.TASK_ID,\n              taskDescription: task.TASK_DESCRIPTION,\n              dueDate: task.DUE_DATE\n            }\n          }, task.TASK_ID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 52\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"Zma5zBlzwt23LvjdYapnP50pj0o=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useContext","useEffect","useRef","useState","React","Task","taskContext","jsxDEV","_jsxDEV","Tasks","_s","context","modal","tasks","getTasks","children","className","scope","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","task","taskId","TASK_ID","taskDescription","TASK_DESCRIPTION","dueDate","DUE_DATE","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/components/Tasks.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react';\r\nimport React from 'react'\r\nimport Task from './Task';\r\nimport taskContext from '../context/TaskContext';\r\n// TaskState should have api calls to manipulate data in database\r\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\r\n// change components to addTaskForm, taskTable, updateModal and task \r\n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/\r\n// updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\r\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\r\n// on opening modal task should be set and on submitting the form tasks should be set\r\nexport default function Tasks() {\r\n    const context = useContext(taskContext)\r\n    const modal = useRef()\r\n    const { tasks, getTasks } = context\r\n    useEffect\r\n        (() => { getTasks() });\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Task Description</th>\r\n                        <th scope=\"col\">Due Date</th>\r\n                        <th scope=\"col\" colSpan={2}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map((task) => { return (<Task key={task.TASK_ID} task={{ taskId: task.TASK_ID, taskDescription: task.TASK_DESCRIPTION, dueDate: task.DUE_DATE }} />) })}\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGX,UAAU,CAACM,WAAW,CAAC;EACvC,MAAMM,KAAK,GAAGV,MAAM,CAAC,CAAC;EACtB,MAAM;IAAEW,KAAK;IAAEC;EAAS,CAAC,GAAGH,OAAO;EACnCV,SAAS,CACJ,MAAM;IAAEa,QAAQ,CAAC,CAAC;EAAC,CAAC,CAAC;EAC1B,oBACIN,OAAA;IAAAO,QAAA,eACIP,OAAA;MAAOQ,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACpBP,OAAA;QAAAO,QAAA,eACIP,OAAA;UAAAO,QAAA,gBACIP,OAAA;YAAIS,KAAK,EAAC,KAAK;YAAAF,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCb,OAAA;YAAIS,KAAK,EAAC,KAAK;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7Bb,OAAA;YAAIS,KAAK,EAAC,KAAK;YAACK,OAAO,EAAE,CAAE;YAAAP,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRb,OAAA;QAAAO,QAAA,EACKF,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;UAAE,oBAAQhB,OAAA,CAACH,IAAI;YAAoBmB,IAAI,EAAE;cAAEC,MAAM,EAAED,IAAI,CAACE,OAAO;cAAEC,eAAe,EAAEH,IAAI,CAACI,gBAAgB;cAAEC,OAAO,EAAEL,IAAI,CAACM;YAAS;UAAE,GAA7GN,IAAI,CAACE,OAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmG,CAAC;QAAE,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3J,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGf;AAACX,EAAA,CAvBuBD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}