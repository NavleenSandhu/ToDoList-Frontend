{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\context\\\\TaskState.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport TaskContext from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState(\"\");\n  async function getTasks() {\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  }\n  async function add(taskDescription, dueDate) {\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        taskDescription: taskDescription,\n        dueDate: dueDate\n      })\n    });\n    const json = await response.json();\n    return json;\n  }\n  async function editTask(id, taskDescription, dueDate) {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        taskDescription: taskDescription,\n        dueDate: dueDate\n      })\n    });\n  }\n  async function deleteTask(id) {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      }\n    });\n  }\n  const getName = async () => {\n    const response = await fetch('http://localhost:5000/name', {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    if (json.Forbidden === \"Not Logged In\") {\n      setName(\"\");\n    } else {\n      const name = json.fname + ' ' + json.lname === undefined ? \"\" : json.lname;\n      setName(nam);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      setTasks,\n      getTasks,\n      add,\n      editTask,\n      deleteTask,\n      name,\n      setName\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskState, \"xnfWFYrtB26jARvVuLVv7P0G7KM=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","tasks","setTasks","name","setName","getTasks","response","fetch","method","mode","headers","localStorage","getItem","json","add","taskDescription","dueDate","body","JSON","stringify","editTask","id","deleteTask","getName","Forbidden","fname","lname","undefined","nam","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/context/TaskState.js"],"sourcesContent":["import { useState } from 'react';\r\nimport TaskContext from './TaskContext'\r\n\r\nconst TaskState = (props) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    async function getTasks() {\r\n        const response = await fetch('http://localhost:5000/tasks', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = await response.json();\r\n        setTasks(json);\r\n    }\r\n\r\n    async function add(taskDescription, dueDate) {\r\n        const response = await fetch('http://localhost:5000/tasks', {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n        const json = await response.json();\r\n        return json\r\n    }\r\n\r\n    async function editTask(id, taskDescription, dueDate) {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n    }\r\n\r\n    const getName = async () => {\r\n        const response = await fetch('http://localhost:5000/name', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = await response.json();\r\n        if (json.Forbidden === \"Not Logged In\") {\r\n            setName(\"\")\r\n        } else {\r\n            const name = json.fname + ' ' + json.lname === undefined ? \"\" : json.lname\r\n            setName(nam)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider value={{ tasks, setTasks, getTasks, add, editTask, deleteTask, name, setName }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskState"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,eAAeW,QAAQA,CAAA,EAAG;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzC;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAACW,IAAI,CAAC;EAClB;EAEA,eAAeC,GAAGA,CAACC,eAAe,EAAEC,OAAO,EAAE;IACzC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzC,CAAC;MACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEJ,eAAe,EAAEA,eAAe;QAAEC,OAAO,EAAEA;MAAQ,CAAC;IAC/E,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOA,IAAI;EACf;EAEA,eAAeO,QAAQA,CAACC,EAAE,EAAEN,eAAe,EAAEC,OAAO,EAAE;IAClD,MAAMT,KAAK,CAAE,+BAA8Bc,EAAG,EAAC,EAAE;MAC7Cb,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzC,CAAC;MACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEJ,eAAe,EAAEA,eAAe;QAAEC,OAAO,EAAEA;MAAQ,CAAC;IAC/E,CAAC,CAAC;EAEN;EAEA,eAAeM,UAAUA,CAACD,EAAE,EAAE;IAC1B,MAAMd,KAAK,CAAE,+BAA8Bc,EAAG,EAAC,EAAE;MAC7Cb,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzC;IACJ,CAAC,CAAC;EACN;EAEA,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACvDC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACzC;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAIA,IAAI,CAACW,SAAS,KAAK,eAAe,EAAE;MACpCpB,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACH,MAAMD,IAAI,GAAGU,IAAI,CAACY,KAAK,GAAG,GAAG,GAAGZ,IAAI,CAACa,KAAK,KAAKC,SAAS,GAAG,EAAE,GAAGd,IAAI,CAACa,KAAK;MAC1EtB,OAAO,CAACwB,GAAG,CAAC;IAChB;EACJ,CAAC;EAED,oBACI/B,OAAA,CAACF,WAAW,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAE7B,KAAK;MAAEC,QAAQ;MAAEG,QAAQ;MAAES,GAAG;MAAEM,QAAQ;MAAEE,UAAU;MAAEnB,IAAI;MAAEC;IAAQ,CAAE;IAAA2B,QAAA,EAChGhC,KAAK,CAACgC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAnC,EAAA,CA7EKF,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AA+Ef,eAAeA,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}