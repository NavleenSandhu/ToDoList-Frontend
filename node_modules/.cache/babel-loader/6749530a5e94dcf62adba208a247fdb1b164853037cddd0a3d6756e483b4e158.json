{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\context\\\\TaskState.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport TaskContext from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  async function getTasks() {\n    const response = await fetch('http://localhost:5000/tasks', {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\n      }\n    });\n    const json = await response.json();\n    setTasks(json);\n  }\n  async function add(taskDescription, dueDate) {\n    await fetch('http://localhost:5000/tasks', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\n      },\n      body: JSON.stringify({\n        taskDescription: taskDescription,\n        dueDate: dueDate\n      })\n    });\n  }\n  async function editTask(id, taskDescription, dueDate) {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\n      },\n      body: JSON.stringify({\n        taskDescription: taskDescription,\n        dueDate: dueDate\n      })\n    });\n    let newTasks = JSON.parse(JSON.stringify(tasks));\n    console.log(newTasks);\n    for (let index = 0; index < newTasks.length; index++) {\n      const element = newTasks[index];\n      if (element.TASK_ID === id) {\n        newTasks[index].TASK_DESCRIPTION = taskDescription;\n        newTasks[index].DUE_DATE = modalTaskDueDate;\n        console.log(newTasks[index]);\n        break;\n      }\n    }\n    setTasks(newTasks);\n  }\n  async function deleteTask(id) {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      setTasks,\n      getTasks,\n      add,\n      editTask,\n      deleteTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskState, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","tasks","setTasks","getTasks","response","fetch","method","mode","headers","json","add","taskDescription","dueDate","body","JSON","stringify","editTask","id","newTasks","parse","console","log","index","length","element","TASK_ID","TASK_DESCRIPTION","DUE_DATE","modalTaskDueDate","deleteTask","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/context/TaskState.js"],"sourcesContent":["import { useState } from 'react';\r\nimport TaskContext from './TaskContext'\r\n\r\nconst TaskState = (props) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    async function getTasks() {\r\n        const response = await fetch('http://localhost:5000/tasks', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\r\n            }\r\n        })\r\n        const json = await response.json();\r\n        setTasks(json);\r\n    }\r\n\r\n    async function add(taskDescription, dueDate) {\r\n        await fetch('http://localhost:5000/tasks', {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n    }\r\n\r\n    async function editTask(id, taskDescription, dueDate) {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\r\n            },\r\n            body: JSON.stringify({ taskDescription: taskDescription, dueDate: dueDate })\r\n        })\r\n        let newTasks = JSON.parse(JSON.stringify(tasks));\r\n        console.log(newTasks)\r\n        for (let index = 0; index < newTasks.length; index++) {\r\n            const element = newTasks[index];\r\n            if (element.TASK_ID === id) {\r\n                newTasks[index].TASK_DESCRIPTION = taskDescription;\r\n                newTasks[index].DUE_DATE = modalTaskDueDate;\r\n                console.log(newTasks[index])\r\n                break;\r\n            }\r\n        }\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    async function deleteTask(id) {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjo1fSwiaWF0IjoxNzA0NzY1ODcwfQ.gee66hhxU7DmQMOReq9B67VqMzdP9j22rmvjoRwsKzE\"\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <TaskContext.Provider value={{ tasks, setTasks, getTasks, add, editTask, deleteTask }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}