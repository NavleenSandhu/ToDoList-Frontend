{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript projects\\\\todolist-frontend\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport React from 'react';\nimport Task from './Task';\nimport taskContext from '../context/TaskContext';\nimport UpdateModal from './UpdateModal';\n// TaskState should have api calls to manipulate data in database\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\n// change components to addTaskForm, taskTable, updateModal and task \n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/\n// updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\n// on opening modal task should be set and on submitting the form tasks should be set\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const context = useContext(taskContext);\n  const modal = useRef();\n  const {\n    tasks,\n    getTasks\n  } = context;\n  const updateTask = task => {};\n  useEffect(() => {\n    getTasks();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UpdateModal, {\n      modal: modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            colSpan: 2,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            task: {\n              taskId: task.TASK_ID,\n              taskDescription: task.TASK_DESCRIPTION,\n              dueDate: task.DUE_DATE\n            },\n            modal: modal,\n            updateTask: up\n          }, task.TASK_ID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 52\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"Zma5zBlzwt23LvjdYapnP50pj0o=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useContext","useEffect","useRef","useState","React","Task","taskContext","UpdateModal","jsxDEV","_jsxDEV","Tasks","_s","context","modal","tasks","getTasks","updateTask","task","children","fileName","_jsxFileName","lineNumber","columnNumber","className","scope","colSpan","map","taskId","TASK_ID","taskDescription","TASK_DESCRIPTION","dueDate","DUE_DATE","up","_c","$RefreshReg$"],"sources":["C:/Javascript projects/todolist-frontend/src/components/Tasks.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react';\r\nimport React from 'react'\r\nimport Task from './Task';\r\nimport taskContext from '../context/TaskContext';\r\nimport UpdateModal from './UpdateModal';\r\n// TaskState should have api calls to manipulate data in database\r\n// Tasks, AddPage and each task should have access to tasks and setTasks to change on frontend\r\n// change components to addTaskForm, taskTable, updateModal and task \r\n/*\r\n    App\r\n        addTaskForm - task state (not related to the bottom tasks)\r\n        taskTable\r\n            task - task state\r\n            task - task state\r\n            task - task state\r\n            updateModal - task state\r\n        taskTable\r\n    App\r\n*/\r\n// updateModal should be a component and should have a task and setTask same as each task should have a state task and setTask\r\n//when you open the modal the modal should have data froom the task state of the task clicked which was given by props\r\n// on opening modal task should be set and on submitting the form tasks should be set\r\nexport default function Tasks() {\r\n    const context = useContext(taskContext)\r\n    const modal = useRef()\r\n    const { tasks, getTasks } = context\r\n\r\n    const updateTask =(task)=>{\r\n        \r\n    }\r\n    useEffect\r\n        (() => { getTasks() });\r\n    return (\r\n        <div>\r\n            <UpdateModal modal={modal} />\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Task Description</th>\r\n                        <th scope=\"col\">Due Date</th>\r\n                        <th scope=\"col\" colSpan={2}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map((task) => { return (<Task key={task.TASK_ID} task={{ taskId: task.TASK_ID, taskDescription: task.TASK_DESCRIPTION, dueDate: task.DUE_DATE }} modal={modal} updateTask={up}/>) })}\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGZ,UAAU,CAACM,WAAW,CAAC;EACvC,MAAMO,KAAK,GAAGX,MAAM,CAAC,CAAC;EACtB,MAAM;IAAEY,KAAK;IAAEC;EAAS,CAAC,GAAGH,OAAO;EAEnC,MAAMI,UAAU,GAAGC,IAAI,IAAG,CAE1B,CAAC;EACDhB,SAAS,CACJ,MAAM;IAAEc,QAAQ,CAAC,CAAC;EAAC,CAAC,CAAC;EAC1B,oBACIN,OAAA;IAAAS,QAAA,gBACIT,OAAA,CAACF,WAAW;MAACM,KAAK,EAAEA;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Bb,OAAA;MAAOc,SAAS,EAAC,OAAO;MAAAL,QAAA,gBACpBT,OAAA;QAAAS,QAAA,eACIT,OAAA;UAAAS,QAAA,gBACIT,OAAA;YAAIe,KAAK,EAAC,KAAK;YAAAN,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrCb,OAAA;YAAIe,KAAK,EAAC,KAAK;YAAAN,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7Bb,OAAA;YAAIe,KAAK,EAAC,KAAK;YAACC,OAAO,EAAE,CAAE;YAAAP,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRb,OAAA;QAAAS,QAAA,EACKJ,KAAK,CAACY,GAAG,CAAET,IAAI,IAAK;UAAE,oBAAQR,OAAA,CAACJ,IAAI;YAAoBY,IAAI,EAAE;cAAEU,MAAM,EAAEV,IAAI,CAACW,OAAO;cAAEC,eAAe,EAAEZ,IAAI,CAACa,gBAAgB;cAAEC,OAAO,EAAEd,IAAI,CAACe;YAAS,CAAE;YAACnB,KAAK,EAAEA,KAAM;YAACG,UAAU,EAAEiB;UAAG,GAA3IhB,IAAI,CAACW,OAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgI,CAAC;QAAE,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGf;AAACX,EAAA,CA5BuBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}